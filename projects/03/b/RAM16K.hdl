// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way (in=load, sel=address[12..13], a=areg, b=breg, c=creg, d=dreg);
    RAM4K (in=in, load=areg, address=address[0..11], out=aout);
    RAM4K (in=in, load=breg, address=address[0..11], out=bout);
    RAM4K (in=in, load=creg, address=address[0..11], out=cout);
    RAM4K (in=in, load=dreg, address=address[0..11], out=dout);
    Mux4Way16 (a=aout, b=bout, c=cout, d=dout, sel=address[12..13], out=out);
}
